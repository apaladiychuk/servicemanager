/*
 * Service manager- openapi 3.0.0
 *
 * Test task service manager
 *
 * API version: 0.0.1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package handler

import (
	"github.com/gin-gonic/gin"
	"log"
	"net/http"
	"servicemanager/model"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func InitEngine() *gin.Engine {
	router := gin.Default()

	router.Use(gin.Recovery())
	router.Use(LocalStore())

	router.GET("/", GetServices)
	router.POST("/", StartService)
	router.GET("/:id", GetServiceStatus)
	router.DELETE("/:id", TerminateService)

	return router
}

func LocalStore() gin.HandlerFunc {
	dbContext := make(map[int]*model.Service)

	// run inti command
	if s, err := model.StartCommand("cmd", "/C", "dir"); err != nil {
		log.Printf("Error run init command %v\n ", err)
	} else {
		dbContext[s.PID] = s
	}

	return func(c *gin.Context) {
		c.Set("DB", dbContext)
		c.Next()
	}
}
